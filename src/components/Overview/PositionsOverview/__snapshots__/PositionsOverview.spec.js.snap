// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConsolidatedInfoChart should match snapshot loaded 1`] = `
<Fragment>
  <styled.section>
    <PendingTransactions
      backgroundColor="#EEF1F3"
      loading={false}
      margins={
        Object {
          "bottom": "0px",
          "left": "16px",
          "right": "16px",
          "top": "16px",
        }
      }
      pendingTransactions={
        Array [
          Object {
            "id": 2692,
            "idempotencyKey": "3E1A83FA-9441-44D8-AD13-4C007E540C71",
            "product": Object {
              "classType": "Fixed Income",
              "classTypeLabel": "Renda Fixa",
              "id": 5,
              "name": "BAHIA AM FI RENDA FIXA REFERENCIADO DI",
              "riskProfile": "Conservative",
              "riskProfileLabel": "Conservador",
            },
            "transactionDate": "2021-03-11",
            "transactionValue": 20000,
            "type": "subscription",
            "typeLabel": "Aplicação",
          },
        ]
      }
    />
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={true}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <section>
        <DonutChart
          assets={
            Array [
              Object {
                "assetType": "CashAccount",
                "assetTypeLabel": "Conta Corrente",
                "date": "2018-05-04",
                "grossBalance": 631409.01,
                "grossResultBalance": 631409.01,
                "incomeTaxBalance": 0.71,
                "iofBalance": 0,
                "name": "Conta Corrente",
                "netBalance": 631409.01,
                "portfolioShare": 26.75,
              },
              Object {
                "assetType": "FixedIncome",
                "assetTypeLabel": "Renda Fixa",
                "date": "2018-05-04",
                "grossBalance": 1252739.34,
                "grossResultBalance": 134498.08,
                "incomeTaxBalance": 0.71,
                "iofBalance": 0,
                "name": "Renda Fixa",
                "netBalance": 1252738.63,
                "portfolioShare": 53.07,
              },
              Object {
                "assetType": "Funds",
                "assetTypeLabel": "Fundos",
                "date": "2018-05-04",
                "grossBalance": 483106.57,
                "grossResultBalance": 38311.11,
                "incomeTaxBalance": 6333.05,
                "iofBalance": 0,
                "name": "Fundos",
                "netBalance": 476773.52,
                "portfolioShare": 20.2,
              },
            ]
          }
          dataTest="mobilePositionsType"
          loading={false}
        >
          <Memo(ConsolidatedInfoChart)
            callback={[Function]}
            hideValues={false}
            total={
              Object {
                "grossBalance": 2367254.92,
                "netBalance": 2360921.16,
                "portfolioShare": "100",
              }
            }
          />
          <styled.div
            angle={270}
            data-test="rightIcon"
            position={0}
          >
            <Icon
              color="#3976cf"
              height={30}
              onClick={[Function]}
              spacing={
                Object {
                  "bottom": "none",
                  "left": "none",
                  "right": "none",
                  "top": "none",
                }
              }
              type="Arrow"
              width={30}
            />
          </styled.div>
        </DonutChart>
      </section>
      <section>
        <DonutChart
          assets={
            Array [
              Object {
                "assetClass": "Conta-corrente",
                "grossBalance": 63109.01,
                "grossResultBalance": 63109.01,
                "name": "Conta-corrente",
                "netBalance": 63109.01,
                "portfolioShare": 3.53,
              },
              Object {
                "assetClass": "Renda Fixa",
                "grossBalance": 1410791.08,
                "grossResultBalance": 147754.36,
                "incomeTaxBalance": 696.43,
                "iofBalance": 0,
                "name": "Renda Fixa",
                "netBalance": 1410094.65,
                "portfolioShare": 78.67,
              },
              Object {
                "assetClass": "Multimercados",
                "grossBalance": 325054.83,
                "grossResultBalance": 25054.83,
                "incomeTaxBalance": 5637.33,
                "iofBalance": 0,
                "name": "Multimercados",
                "netBalance": 319417.5,
                "portfolioShare": 17.82,
              },
            ]
          }
          dataTest="mobileAssetsClass"
          loading={false}
        >
          <styled.div
            angle={90}
            data-test="leftIcon"
            position={0}
          />
          <Memo(ConsolidatedInfoChart)
            callback={[Function]}
            hideValues={false}
            total={
              Object {
                "grossBalance": 1798954.9200000002,
                "netBalance": 1792621.16,
                "portfolioShare": "100",
              }
            }
          />
        </DonutChart>
      </section>
    </ReactSwipableView>
    <styled.div>
      <styled.div
        active={true}
      />
      <styled.div
        active={false}
      />
    </styled.div>
  </styled.section>
  <styled.div>
    <DetailsPositionCharts
      activeChart={0}
      assets={
        Array [
          Object {
            "assetType": "CashAccount",
            "assetTypeLabel": "Conta Corrente",
            "date": "2018-05-04",
            "grossBalance": 631409.01,
            "grossResultBalance": 631409.01,
            "incomeTaxBalance": 0.71,
            "iofBalance": 0,
            "name": "Conta Corrente",
            "netBalance": 631409.01,
            "portfolioShare": 26.75,
          },
          Object {
            "assetType": "FixedIncome",
            "assetTypeLabel": "Renda Fixa",
            "date": "2018-05-04",
            "grossBalance": 1252739.34,
            "grossResultBalance": 134498.08,
            "incomeTaxBalance": 0.71,
            "iofBalance": 0,
            "name": "Renda Fixa",
            "netBalance": 1252738.63,
            "portfolioShare": 53.07,
          },
          Object {
            "assetType": "Funds",
            "assetTypeLabel": "Fundos",
            "date": "2018-05-04",
            "grossBalance": 483106.57,
            "grossResultBalance": 38311.11,
            "incomeTaxBalance": 6333.05,
            "iofBalance": 0,
            "name": "Fundos",
            "netBalance": 476773.52,
            "portfolioShare": 20.2,
          },
        ]
      }
      dataTest="consolidatedPosition"
      hideValues={false}
      loading={false}
    />
  </styled.div>
</Fragment>
`;

exports[`ConsolidatedInfoChart should match snapshot loading 1`] = `
<Fragment>
  <styled.section>
    <PendingTransactions
      backgroundColor="#EEF1F3"
      loading={true}
      margins={
        Object {
          "bottom": "0px",
          "left": "16px",
          "right": "16px",
          "top": "16px",
        }
      }
      pendingTransactions={
        Array [
          Object {
            "id": 2692,
            "idempotencyKey": "3E1A83FA-9441-44D8-AD13-4C007E540C71",
            "product": Object {
              "classType": "Fixed Income",
              "classTypeLabel": "Renda Fixa",
              "id": 5,
              "name": "BAHIA AM FI RENDA FIXA REFERENCIADO DI",
              "riskProfile": "Conservative",
              "riskProfileLabel": "Conservador",
            },
            "transactionDate": "2021-03-11",
            "transactionValue": 20000,
            "type": "subscription",
            "typeLabel": "Aplicação",
          },
        ]
      }
    />
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={true}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <section>
        <DonutChart
          assets={
            Array [
              Object {
                "assetType": "CashAccount",
                "assetTypeLabel": "Conta Corrente",
                "date": "2018-05-04",
                "grossBalance": 631409.01,
                "grossResultBalance": 631409.01,
                "incomeTaxBalance": 0.71,
                "iofBalance": 0,
                "name": "Conta Corrente",
                "netBalance": 631409.01,
                "portfolioShare": 26.75,
              },
              Object {
                "assetType": "FixedIncome",
                "assetTypeLabel": "Renda Fixa",
                "date": "2018-05-04",
                "grossBalance": 1252739.34,
                "grossResultBalance": 134498.08,
                "incomeTaxBalance": 0.71,
                "iofBalance": 0,
                "name": "Renda Fixa",
                "netBalance": 1252738.63,
                "portfolioShare": 53.07,
              },
              Object {
                "assetType": "Funds",
                "assetTypeLabel": "Fundos",
                "date": "2018-05-04",
                "grossBalance": 483106.57,
                "grossResultBalance": 38311.11,
                "incomeTaxBalance": 6333.05,
                "iofBalance": 0,
                "name": "Fundos",
                "netBalance": 476773.52,
                "portfolioShare": 20.2,
              },
            ]
          }
          dataTest="mobilePositionsType"
          loading={true}
        >
          <Memo(ConsolidatedInfoChart)
            callback={[Function]}
            hideValues={false}
            total={
              Object {
                "grossBalance": 2367254.92,
                "netBalance": 2360921.16,
                "portfolioShare": "100",
              }
            }
          />
        </DonutChart>
      </section>
      <section>
        <DonutChart
          assets={
            Array [
              Object {
                "assetClass": "Conta-corrente",
                "grossBalance": 63109.01,
                "grossResultBalance": 63109.01,
                "name": "Conta-corrente",
                "netBalance": 63109.01,
                "portfolioShare": 3.53,
              },
              Object {
                "assetClass": "Renda Fixa",
                "grossBalance": 1410791.08,
                "grossResultBalance": 147754.36,
                "incomeTaxBalance": 696.43,
                "iofBalance": 0,
                "name": "Renda Fixa",
                "netBalance": 1410094.65,
                "portfolioShare": 78.67,
              },
              Object {
                "assetClass": "Multimercados",
                "grossBalance": 325054.83,
                "grossResultBalance": 25054.83,
                "incomeTaxBalance": 5637.33,
                "iofBalance": 0,
                "name": "Multimercados",
                "netBalance": 319417.5,
                "portfolioShare": 17.82,
              },
            ]
          }
          dataTest="mobileAssetsClass"
          loading={true}
        >
          <styled.div
            angle={90}
            data-test="leftIcon"
            position={0}
          />
          <Memo(ConsolidatedInfoChart)
            callback={[Function]}
            hideValues={false}
            total={
              Object {
                "grossBalance": 1798954.9200000002,
                "netBalance": 1792621.16,
                "portfolioShare": "100",
              }
            }
          />
        </DonutChart>
      </section>
    </ReactSwipableView>
  </styled.section>
  <styled.div>
    <DetailsPositionCharts
      activeChart={0}
      assets={
        Array [
          Object {
            "assetType": "CashAccount",
            "assetTypeLabel": "Conta Corrente",
            "date": "2018-05-04",
            "grossBalance": 631409.01,
            "grossResultBalance": 631409.01,
            "incomeTaxBalance": 0.71,
            "iofBalance": 0,
            "name": "Conta Corrente",
            "netBalance": 631409.01,
            "portfolioShare": 26.75,
          },
          Object {
            "assetType": "FixedIncome",
            "assetTypeLabel": "Renda Fixa",
            "date": "2018-05-04",
            "grossBalance": 1252739.34,
            "grossResultBalance": 134498.08,
            "incomeTaxBalance": 0.71,
            "iofBalance": 0,
            "name": "Renda Fixa",
            "netBalance": 1252738.63,
            "portfolioShare": 53.07,
          },
          Object {
            "assetType": "Funds",
            "assetTypeLabel": "Fundos",
            "date": "2018-05-04",
            "grossBalance": 483106.57,
            "grossResultBalance": 38311.11,
            "incomeTaxBalance": 6333.05,
            "iofBalance": 0,
            "name": "Fundos",
            "netBalance": 476773.52,
            "portfolioShare": 20.2,
          },
        ]
      }
      dataTest="consolidatedPosition"
      hideValues={false}
      loading={true}
    />
  </styled.div>
</Fragment>
`;

exports[`ConsolidatedInfoChart should match snapshot with empty assets 1`] = `
<Fragment>
  <styled.section>
    <PendingTransactions
      backgroundColor="#EEF1F3"
      loading={false}
      margins={
        Object {
          "bottom": "0px",
          "left": "16px",
          "right": "16px",
          "top": "16px",
        }
      }
      pendingTransactions={
        Array [
          Object {
            "id": 2692,
            "idempotencyKey": "3E1A83FA-9441-44D8-AD13-4C007E540C71",
            "product": Object {
              "classType": "Fixed Income",
              "classTypeLabel": "Renda Fixa",
              "id": 5,
              "name": "BAHIA AM FI RENDA FIXA REFERENCIADO DI",
              "riskProfile": "Conservative",
              "riskProfileLabel": "Conservador",
            },
            "transactionDate": "2021-03-11",
            "transactionValue": 20000,
            "type": "subscription",
            "typeLabel": "Aplicação",
          },
        ]
      }
    />
    <ReactSwipableView
      animateHeight={false}
      animateTransitions={true}
      axis="x"
      disableLazyLoading={false}
      disabled={true}
      enableMouseEvents={false}
      hysteresis={0.6}
      ignoreNativeScroll={false}
      index={0}
      resistance={false}
      springConfig={
        Object {
          "delay": "0s",
          "duration": "0.35s",
          "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
        }
      }
      threshold={5}
    >
      <section>
        <DonutChart
          assets={Array []}
          dataTest="mobilePositionsType"
          loading={false}
        >
          <Memo(ConsolidatedInfoChart)
            callback={[Function]}
            hideValues={false}
            total={0}
          />
          <styled.div
            angle={270}
            data-test="rightIcon"
            position={0}
          >
            <Icon
              color="#3976cf"
              height={30}
              onClick={[Function]}
              spacing={
                Object {
                  "bottom": "none",
                  "left": "none",
                  "right": "none",
                  "top": "none",
                }
              }
              type="Arrow"
              width={30}
            />
          </styled.div>
        </DonutChart>
      </section>
      <section>
        <DonutChart
          assets={Array []}
          dataTest="mobileAssetsClass"
          loading={false}
        >
          <styled.div
            angle={90}
            data-test="leftIcon"
            position={0}
          />
          <Memo(ConsolidatedInfoChart)
            callback={[Function]}
            hideValues={false}
            total={0}
          />
        </DonutChart>
      </section>
    </ReactSwipableView>
    <styled.div>
      <styled.div
        active={true}
      />
      <styled.div
        active={false}
      />
    </styled.div>
  </styled.section>
  <styled.div>
    <DetailsPositionCharts
      activeChart={0}
      assets={Array []}
      dataTest="consolidatedPosition"
      hideValues={false}
      loading={false}
    />
  </styled.div>
</Fragment>
`;
