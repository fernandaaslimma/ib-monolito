// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Result Should render result screen with error component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    style="overflow: visible;"
  >
    <div>
      <div
        class="sc-htoDjs bTZaPR"
      >
        <div
          class="sc-gzVnrw cdoCrb"
        >
          <img
            class="sc-dnqmqq jzjlRB"
            data-test="ErrorImage"
            src="test-file-stub"
          />
          <span
            class="sc-iwsKbI DRTKc"
            data-test="ErrorTitle"
          />
          <span
            class="sc-gqjmRU kYMkIL"
            data-test="ErrorMsg"
          />
        </div>
      </div>
      <div
        class="sc-bxivhb dTVtJP"
      >
        <button
          class="sc-jzJRlG glmjTq"
          data-test="CloseBtn"
          style="width: 100%;"
          type="button"
        >
          <div
            class="sc-cSHVUG bCWrEC"
          >
            <div
              class="sc-kAzzGY exmTdx"
            />
          </div>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-htoDjs bTZaPR"
    >
      <div
        class="sc-gzVnrw cdoCrb"
      >
        <img
          class="sc-dnqmqq jzjlRB"
          data-test="ErrorImage"
          src="test-file-stub"
        />
        <span
          class="sc-iwsKbI DRTKc"
          data-test="ErrorTitle"
        />
        <span
          class="sc-gqjmRU kYMkIL"
          data-test="ErrorMsg"
        />
      </div>
    </div>
    <div
      class="sc-bxivhb dTVtJP"
    >
      <button
        class="sc-jzJRlG glmjTq"
        data-test="CloseBtn"
        style="width: 100%;"
        type="button"
      >
        <div
          class="sc-cSHVUG bCWrEC"
        >
          <div
            class="sc-kAzzGY exmTdx"
          />
        </div>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Result Should render result screen with success component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    style="overflow: visible;"
  >
    <div>
      <div
        class="sc-htoDjs bTZaPR"
      >
        <div
          class="sc-gzVnrw cdoCrb"
        >
          <img
            class="sc-dnqmqq jzjlRB"
            data-test="SuccessImage"
            src="test-file-stub"
          />
          <span
            class="sc-iwsKbI DRTKc"
            data-test="ExReqTitle"
          />
          <span
            class="sc-gZMcBi dapbgP"
            data-test="ExReqDate"
          >
            06/01/2010 undefined 01:01
          </span>
          <span
            class="sc-bwzfXH cLnrbV"
            data-test="ExReqFavoredSpan"
          />
          <span
            class="sc-bwzfXH cLnrbV"
            data-test="ExReqValueSpan"
          />
          <span
            class="sc-bwzfXH cLnrbV"
            data-test="ExReqDebitDateSpan"
          />
          <span
            class="sc-EHOje kENmhg"
          >
            <span
              class="sc-bZQynM ipfgwu"
              data-test="ExReqCreditDateSpan"
              style="margin-right: 0.5rem;"
            />
            <span
              class="sc-hSdWYo hKubZH"
              color="#3976cf"
              data-test="ExReqCreditDateIcon"
              height="24"
              width="24"
            >
              <svg
                height="140"
                viewBox="0 0 140 140"
                width="140"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g
                  fill="currentColor"
                  fill-rule="nonzero"
                >
                  <g
                    transform="translate(66.655 42.516)"
                  >
                    <path
                      d="M5.3 28.606a3.812 3.812 0 0 1-3.814-3.814V3.814A3.812 3.812 0 0 1 5.3 0a3.812 3.812 0 0 1 3.814 3.814v20.978A3.812 3.812 0 0 1 5.3 28.606z"
                    />
                    <circle
                      cx="5.302"
                      cy="41.273"
                      r="4.495"
                    />
                  </g>
                  <path
                    d="M72.692 113.078c-25.238 0-45.769-20.53-45.769-45.77 0-25.238 20.53-45.768 45.77-45.768 25.238 0 45.769 20.53 45.769 45.769 0 25.238-20.531 45.77-45.77 45.77zm0-83.91c-21.03 0-38.14 17.111-38.14 38.14 0 21.03 17.11 38.142 38.14 38.142s38.141-17.111 38.141-38.141c0-21.03-17.111-38.141-38.14-38.141z"
                  />
                </g>
              </svg>
            </span>
          </span>
        </div>
      </div>
      <div
        class="sc-bxivhb dTVtJP"
      >
        <button
          class="sc-jzJRlG glmjTq"
          data-test="CloseBtn"
          style="width: 100%;"
          type="button"
        >
          <div
            class="sc-cSHVUG bCWrEC"
          >
            <div
              class="sc-kAzzGY exmTdx"
            />
          </div>
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-htoDjs bTZaPR"
    >
      <div
        class="sc-gzVnrw cdoCrb"
      >
        <img
          class="sc-dnqmqq jzjlRB"
          data-test="SuccessImage"
          src="test-file-stub"
        />
        <span
          class="sc-iwsKbI DRTKc"
          data-test="ExReqTitle"
        />
        <span
          class="sc-gZMcBi dapbgP"
          data-test="ExReqDate"
        >
          06/01/2010 undefined 01:01
        </span>
        <span
          class="sc-bwzfXH cLnrbV"
          data-test="ExReqFavoredSpan"
        />
        <span
          class="sc-bwzfXH cLnrbV"
          data-test="ExReqValueSpan"
        />
        <span
          class="sc-bwzfXH cLnrbV"
          data-test="ExReqDebitDateSpan"
        />
        <span
          class="sc-EHOje kENmhg"
        >
          <span
            class="sc-bZQynM ipfgwu"
            data-test="ExReqCreditDateSpan"
            style="margin-right: 0.5rem;"
          />
          <span
            class="sc-hSdWYo hKubZH"
            color="#3976cf"
            data-test="ExReqCreditDateIcon"
            height="24"
            width="24"
          >
            <svg
              height="140"
              viewBox="0 0 140 140"
              width="140"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g
                fill="currentColor"
                fill-rule="nonzero"
              >
                <g
                  transform="translate(66.655 42.516)"
                >
                  <path
                    d="M5.3 28.606a3.812 3.812 0 0 1-3.814-3.814V3.814A3.812 3.812 0 0 1 5.3 0a3.812 3.812 0 0 1 3.814 3.814v20.978A3.812 3.812 0 0 1 5.3 28.606z"
                  />
                  <circle
                    cx="5.302"
                    cy="41.273"
                    r="4.495"
                  />
                </g>
                <path
                  d="M72.692 113.078c-25.238 0-45.769-20.53-45.769-45.77 0-25.238 20.53-45.768 45.77-45.768 25.238 0 45.769 20.53 45.769 45.769 0 25.238-20.531 45.77-45.77 45.77zm0-83.91c-21.03 0-38.14 17.111-38.14 38.14 0 21.03 17.11 38.142 38.14 38.142s38.141-17.111 38.141-38.141c0-21.03-17.111-38.141-38.14-38.141z"
                />
              </g>
            </svg>
          </span>
        </span>
      </div>
    </div>
    <div
      class="sc-bxivhb dTVtJP"
    >
      <button
        class="sc-jzJRlG glmjTq"
        data-test="CloseBtn"
        style="width: 100%;"
        type="button"
      >
        <div
          class="sc-cSHVUG bCWrEC"
        >
          <div
            class="sc-kAzzGY exmTdx"
          />
        </div>
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
